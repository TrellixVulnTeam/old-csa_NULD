{"remainingRequest":"/Users/wrunge/workspace/common/CSA/node_modules/babel-loader/lib/index.js!/Users/wrunge/workspace/common/CSA/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wrunge/workspace/common/CSA/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wrunge/workspace/common/CSA/src/components/Order/OrderChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/wrunge/workspace/common/CSA/src/components/Order/OrderChart.vue","mtime":1624619706897},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5jb25jYXQuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBDaGFydCBmcm9tICdjaGFydC5qcy9hdXRvJzsKaW1wb3J0IHsgQ0hBUlRfQ09MT1JTLCB0cmFuc3BhcmVudGl6ZSB9IGZyb20gJy4uLy4uL21pc2MvSlNDaGFydFV0aWxzJzsKdmFyIERBVEFfQ09VTlQgPSAxMjsKdmFyIGxhYmVscyA9IFtdOwoKZm9yICh2YXIgaSA9IDA7IGkgPCBEQVRBX0NPVU5UOyArK2kpIHsKICBsYWJlbHMucHVzaChpLnRvU3RyaW5nKCkpOwp9Cgpjb25zb2xlLmxvZyhDSEFSVF9DT0xPUlMpOwp2YXIgZGF0YXBvaW50cyA9IFswLCAyMCwgODAsIDkwLCAxMDAsIDEwMiwgMTEwXTsKdmFyIGRhdGFwb2ludHMyID0gWzIwLCA0MCwgODAsIDkwLCAxMjAsIDEzMCwgMTQwXTsKdmFyIGRheXMgPSBbIlN1bmRheSIsICJNb25kYXkiLCAiVHVlc2RheSIsICJXZWRuZXNkYXkiLCAiVGh1cnNkYXkiLCAiRnJpZGF5IiwgIlNhdHVyZGF5Il07CnZhciBkYXRhID0gewogIGxhYmVsczogZGF5cy5zbGljZShuZXcgRGF0ZSgpLmdldFVUQ0RheSgpICsgMSkuY29uY2F0KGRheXMuc2xpY2UoMCwgbmV3IERhdGUoKS5nZXRVVENEYXkoKSArIDEpKSwKICBkYXRhc2V0czogW3sKICAgIGxhYmVsOiAnT3JkZXJzIGZpbGxlZCcsCiAgICBkYXRhOiBkYXRhcG9pbnRzLAogICAgYm9yZGVyQ29sb3I6IENIQVJUX0NPTE9SUy5ncmVlbiwKICAgIGJhY2tncm91bmRDb2xvcjogdHJhbnNwYXJlbnRpemUoQ0hBUlRfQ09MT1JTLmdyZWVuKSwKICAgIGZpbGw6IHRydWUsCiAgICBjdWJpY0ludGVycG9sYXRpb25Nb2RlOiAnbW9ub3RvbmUnLAogICAgdGVuc2lvbjogMC40CiAgfSwgewogICAgbGFiZWw6ICdUb3RhbCBPcmRlcnMnLAogICAgZGF0YTogZGF0YXBvaW50czIsCiAgICBib3JkZXJDb2xvcjogQ0hBUlRfQ09MT1JTLnB1cnBsZSwKICAgIGJhY2tncm91bmRDb2xvcjogdHJhbnNwYXJlbnRpemUoQ0hBUlRfQ09MT1JTLnB1cnBsZSksCiAgICBmaWxsOiB0cnVlLAogICAgY3ViaWNJbnRlcnBvbGF0aW9uTW9kZTogJ21vbm90b25lJywKICAgIHRlbnNpb246IDAuNAogIH1dCn07CnZhciBjb25maWcgPSB7CiAgdHlwZTogJ2xpbmUnLAogIGRhdGE6IGRhdGEsCiAgb3B0aW9uczogewogICAgcmVzcG9uc2l2ZTogdHJ1ZSwKICAgIHBsdWdpbnM6IHsKICAgICAgdGl0bGU6IHsKICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgIHRleHQ6ICdPcmRlcnMgdGhpcyB3ZWVrJwogICAgICB9CiAgICB9LAogICAgaW50ZXJhY3Rpb246IHsKICAgICAgaW50ZXJzZWN0OiBmYWxzZQogICAgfSwKICAgIHNjYWxlczogewogICAgICB4OiB7CiAgICAgICAgZGlzcGxheTogdHJ1ZSwKICAgICAgICB0aXRsZTogewogICAgICAgICAgZGlzcGxheTogdHJ1ZQogICAgICAgIH0KICAgICAgfSwKICAgICAgeTogewogICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgdGl0bGU6IHsKICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICB0ZXh0OiAnVmFsdWUnCiAgICAgICAgfSwKICAgICAgICBzdWdnZXN0ZWRNaW46IDAsCiAgICAgICAgc3VnZ2VzdGVkTWF4OiAyMDAKICAgICAgfQogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBteUNoYXJ0OiB7fQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNyZWF0ZVNTT0NoYXJ0OiBmdW5jdGlvbiBjcmVhdGVTU09DaGFydCgpIHsKICAgICAgdmFyIGN0eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJteUNoYXJ0Iik7CiAgICAgIHRoaXMubXlDaGFydCA9IG5ldyBDaGFydChjdHgsIGNvbmZpZyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jcmVhdGVTU09DaGFydCgpOwogIH0sCiAgZGVzdHJveWVkOiBmdW5jdGlvbiBkZXN0cm95ZWQoKSB7CiAgICBjb25zb2xlLmxvZygiREVTVFJPWUlORyBDSEFSVCIpOwogICAgdGhpcy5teUNoYXJ0LmRlc3Ryb3koKTsKICB9Cn07"},{"version":3,"sources":["OrderChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div>\n                    <canvas id=\"myChart\" width=\"300\" height=\"300\"></canvas>\n\n    </div>\n</template>\n\n<script>\nimport Chart from 'chart.js/auto'\nimport {CHART_COLORS, transparentize} from '../../misc/JSChartUtils'\n\nconst DATA_COUNT = 12;\nconst labels = [];\nfor (let i = 0; i < DATA_COUNT; ++i) {\n  labels.push(i.toString());\n}\n\nconsole.log(CHART_COLORS);\nconst datapoints = [0, 20, 80, 90, 100, 102, 110];\nconst datapoints2 = [20, 40, 80, 90, 120, 130, 140];\nconst days = [\"Sunday\" ,\"Monday\" ,\"Tuesday\" ,\"Wednesday\" ,\"Thursday\" ,\"Friday\" ,\"Saturday\"];\nconst data = {\n  labels: days.slice(new Date().getUTCDay()+1).concat(days.slice(0, new Date().getUTCDay()+1)),\n  datasets: [\n    {\n      label: 'Orders filled',\n      data: datapoints,\n      borderColor: CHART_COLORS.green,\n      backgroundColor: transparentize(CHART_COLORS.green),\n      fill: true,\n      cubicInterpolationMode: 'monotone',\n      tension: 0.4\n    },\n    {\n      label: 'Total Orders',\n      data: datapoints2,\n      borderColor: CHART_COLORS.purple,\n      backgroundColor: transparentize(CHART_COLORS.purple),\n      fill: true,\n      cubicInterpolationMode: 'monotone',\n      tension: 0.4\n    },\n  ]\n};\n      const config = {\n          type: 'line',\n          data: data,\n          options: {\n            responsive: true,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Orders this week'\n              },\n            },\n            interaction: {\n              intersect: false,\n            },\n            scales: {\n              x: {\n                display: true,\n                title: {\n                  display: true\n                }\n              },\n              y: {\n                display: true,\n                title: {\n                  display: true,\n                  text: 'Value'\n                },\n                suggestedMin: 0,\n                suggestedMax: 200\n              }\n            }\n          },\n        };\n    export default {\n        data() {\n            return {\n                myChart: {},\n            }\n        },\n  methods: {\n    createSSOChart() {\n      var ctx = document.getElementById(\"myChart\");\n\n      this.myChart = new Chart(ctx, config);\n    },\n  },\n  mounted () {\n    this.createSSOChart();\n  },\n  destroyed () {\n      console.log(\"DESTROYING CHART\");\n      this.myChart.destroy();\n  },\n    }\n</script>\n\n<style lang=\"scss\" scoped>\n\n</style>"],"sourceRoot":"src/components/Order"}]}