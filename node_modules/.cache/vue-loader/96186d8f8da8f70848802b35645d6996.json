{"remainingRequest":"/Users/wrunge/workspace/common/CSA/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/wrunge/workspace/common/CSA/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/wrunge/workspace/common/CSA/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wrunge/workspace/common/CSA/src/components/Order/OrderSummary.vue?vue&type=template&id=a0c2612e&scoped=true&","dependencies":[{"path":"/Users/wrunge/workspace/common/CSA/src/components/Order/OrderSummary.vue","mtime":1625150427363},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wrunge/workspace/common/CSA/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}